---
# Package Installation Tasks

- name: Install Homebrew packages (macOS)
  homebrew:
    name:
      - ansible
      - arp-scan
      - bash
      - coreutils
      - docker
      - docker-compose
      - go
      - kubectl
      - helm
      - k9s
      - git
      - vim
      - curl
      - wget
      - tree
      - htop
      - jq
      - yq
      - make
      - minikube
      - istioctl
    state: present
  when: ansible_os_family == "Darwin"

- name: Install Homebrew cask applications (macOS)
  homebrew_cask:
    name:
      - brave-browser
      - visual-studio-code
      - multipass
      - dotnet
    state: present
  when: ansible_os_family == "Darwin"

- name: Install basic packages via apt (Ubuntu)
  apt:
    name:
      - ansible
      - arp-scan
      - bash
      - coreutils
      - git
      - vim
      - tree
      - htop
      - jq
      - yq
      - make
      - curl
      - wget
      - brave-browser
      - code
      - kubectl
      - helm
      - docker.io
      - docker-compose
    state: present
    update_cache: true
  become: true
  when: ansible_os_family == "Debian"

- name: Install Go (Ubuntu)
  block:
    - name: Download Go binary
      get_url:
        url: "https://go.dev/dl/go1.21.5.linux-amd64.tar.gz"
        dest: "/tmp/go1.21.5.linux-amd64.tar.gz"
        mode: '0644'

    - name: Remove existing Go installation
      file:
        path: /usr/local/go
        state: absent
      become: true

    - name: Extract Go binary
      unarchive:
        src: "/tmp/go1.21.5.linux-amd64.tar.gz"
        dest: /usr/local
        remote_src: true
      become: true

    - name: Clean up Go installation files
      file:
        path: "/tmp/go1.21.5.linux-amd64.tar.gz"
        state: absent
  when: ansible_os_family == "Debian"

- name: Install k9s (Ubuntu)
  block:
    - name: Download k9s binary
      get_url:
        url: "https://github.com/derailed/k9s/releases/latest/download/k9s_Linux_amd64.tar.gz"
        dest: "/tmp/k9s_Linux_amd64.tar.gz"
        mode: '0644'

    - name: Create k9s directory
      file:
        path: /tmp/k9s
        state: directory
        mode: '0755'

    - name: Extract k9s binary
      unarchive:
        src: "/tmp/k9s_Linux_amd64.tar.gz"
        dest: /tmp/k9s
        remote_src: true

    - name: Install k9s binary
      copy:
        src: /tmp/k9s/k9s
        dest: /usr/local/bin/k9s
        mode: '0755'
        remote_src: true
      become: true

    - name: Clean up k9s installation files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/k9s_Linux_amd64.tar.gz
        - /tmp/k9s
  when: ansible_os_family == "Debian"

- name: Install .NET SDK (Ubuntu)
  block:
    - name: Add Microsoft package signing key
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present
      become: true

    - name: Add Microsoft repository
      apt_repository:
        repo: "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/microsoft.gpg] https://packages.microsoft.com/repos/microsoft-ubuntu-{{ ansible_distribution_release }}-prod {{ ansible_distribution_release }} main"
        state: present
      become: true

    - name: Install .NET SDK
      apt:
        name: dotnet-sdk-8.0
        state: present
        update_cache: true
      become: true
  when: ansible_os_family == "Debian"

- name: Install minikube (Ubuntu)
  block:
    - name: Download minikube binary
      get_url:
        url: "https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64"
        dest: "/tmp/minikube"
        mode: '0755'

    - name: Install minikube binary
      copy:
        src: /tmp/minikube
        dest: /usr/local/bin/minikube
        mode: '0755'
        remote_src: true
      become: true

    - name: Clean up minikube installation files
      file:
        path: /tmp/minikube
        state: absent
  when: ansible_os_family == "Debian"

- name: Install istioctl (Ubuntu)
  block:
    - name: Download latest istio release
      get_url:
        url: "https://github.com/istio/istio/releases/latest/download/istio-1.20.1-linux-amd64.tar.gz"
        dest: "/tmp/istio-1.20.1-linux-amd64.tar.gz"
        mode: '0644'

    - name: Create istio directory
      file:
        path: /tmp/istio
        state: directory
        mode: '0755'

    - name: Extract istio
      unarchive:
        src: "/tmp/istio-1.20.1-linux-amd64.tar.gz"
        dest: /tmp/istio
        remote_src: true

    - name: Install istioctl binary
      copy:
        src: "/tmp/istio/istio-1.20.1/bin/istioctl"
        dest: /usr/local/bin/istioctl
        mode: '0755'
        remote_src: true
      become: true

    - name: Clean up istio installation files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/istio-1.20.1-linux-amd64.tar.gz
        - /tmp/istio
  when: ansible_os_family == "Debian" 
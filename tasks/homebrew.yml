---
# Package Installation Tasks

- name: Install Homebrew packages (macOS)
  homebrew:
    name:
      - ansible
      - arp-scan
      - bash
      - coreutils
      - docker-compose
      - go
      - kubectl
      - helm
      - k9s
      - git
      - vim
      - curl
      - wget
      - tree
      - htop
      - jq
      - yq
      - make
    state: present
  when: ansible_os_family == "Darwin"

- name: Install Homebrew cask applications (macOS)
  homebrew_cask:
    name:
      - brave-browser
      - visual-studio-code
      - multipass
    state: present
  when: ansible_os_family == "Darwin"

- name: Install basic packages via apt (Ubuntu)
  apt:
    name:
      - git
      - vim
      - tree
      - htop
      - jq
      - make
      - brave-browser
      - code
      - kubectl
      - helm
    state: present
    update_cache: true
  become: true
  when: ansible_os_family == "Debian"

- name: Install Go (Ubuntu)
  block:
    - name: Download Go binary
      get_url:
        url: "https://go.dev/dl/go1.21.5.linux-amd64.tar.gz"
        dest: "/tmp/go1.21.5.linux-amd64.tar.gz"
        mode: '0644'

    - name: Remove existing Go installation
      file:
        path: /usr/local/go
        state: absent
      become: true

    - name: Extract Go binary
      unarchive:
        src: "/tmp/go1.21.5.linux-amd64.tar.gz"
        dest: /usr/local
        remote_src: true
      become: true

    - name: Clean up Go installation files
      file:
        path: "/tmp/go1.21.5.linux-amd64.tar.gz"
        state: absent
  when: ansible_os_family == "Debian"

- name: Install k9s (Ubuntu)
  block:
    - name: Download k9s binary
      get_url:
        url: "https://github.com/derailed/k9s/releases/latest/download/k9s_Linux_amd64.tar.gz"
        dest: "/tmp/k9s_Linux_amd64.tar.gz"
        mode: '0644'

    - name: Create k9s directory
      file:
        path: /tmp/k9s
        state: directory
        mode: '0755'

    - name: Extract k9s binary
      unarchive:
        src: "/tmp/k9s_Linux_amd64.tar.gz"
        dest: /tmp/k9s
        remote_src: true

    - name: Install k9s binary
      copy:
        src: /tmp/k9s/k9s
        dest: /usr/local/bin/k9s
        mode: '0755'
        remote_src: true
      become: true

    - name: Clean up k9s installation files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/k9s_Linux_amd64.tar.gz
        - /tmp/k9s
  when: ansible_os_family == "Debian" 